{"version":3,"file":"parsePuzzle.js","names":["parsePuzzle","inputFileTxt","split","filter","line","test","map","l","length"],"sources":["../../src/utils/parsePuzzle.js"],"sourcesContent":["/**\n * \n * @param {text data of the input file containing the puzzle generated} inputFileTxt \n * @returns array 2D containing the puzzle only\n */\n//-----EXAMPLE :\n// # This puzzle is unsolvable\n// 3\n// 2 1 3\n// 8 0 4\n// 7 6 5\n\n//-----OUTPUT :\n// [ [ '2', '1', '3' ], [ '8', '0', '4' ], [ '7', '6', '5' ] ]\nfunction parsePuzzle(inputFileTxt) {\n    return inputFileTxt\n        .split(\"\\n\")\n        .filter(line => /^([\\d+| ]+)(\\d{1,2})+$/.test(line))\n        .map(l => l\n            .split(\" \")\n            .filter(l => l)).filter(l => l && l.length > 1)\n}\n\nexport default parsePuzzle"],"mappings":";;;;;;AAcA,SAASA,WAAW,CAACC,YAAY,EAAE;EAC/B,OAAOA,YAAY,CACdC,KAAK,CAAC,IAAI,CAAC,CACXC,MAAM,CAACC,IAAI,IAAI,wBAAwB,CAACC,IAAI,CAACD,IAAI,CAAC,CAAC,CACnDE,GAAG,CAACC,CAAC,IAAIA,CAAC,CACNL,KAAK,CAAC,GAAG,CAAC,CACVC,MAAM,CAACI,CAAC,IAAIA,CAAC,CAAC,CAAC,CAACJ,MAAM,CAACI,CAAC,IAAIA,CAAC,IAAIA,CAAC,CAACC,MAAM,GAAG,CAAC,CAAC;AAC3D;AAAC,eAEcR,WAAW;AAAA"}