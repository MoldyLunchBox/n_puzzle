{"version":3,"file":"node.js","names":["Node","constructor","puzzle","greedy","uniform","goal","parent","heuristics","treeLevel","undefined","hash","toHash","score","isFinal","checkIfFinal","childs","calculateScore","genChilds","twoDarray","map","row","join","ready_scores","heuristics_in_one_loop","heuristicsFunctions","manhattan","linearConflicts","heuristic_linear_conflicts","hamming","euclidean","diagonal","gaschnig","heuristic_gaschnig","forEach","heuristic","size","length","i","j","currentTile","tileInGoal","findindexOf","mirrorInGoal","d1","Math","abs","x","d2","y","sqrt","max","err","tff","f","parseFloat","toFixed","conflicts","values","currI","currJ","targI","targJ","currentMap","JSON","parse","stringify","goalHash","cmz","tmp","sv","ci","u","g","moves","right","up","left","down","zeroIdx","dir","newPuzzle","moveTile","push","arr2D","trgt","tilePos","direction","array2D","array2DSize","wakeUpChilds","l"],"sources":["../../src/lib/node.js"],"sourcesContent":["\"use strict\";\n// const { log } = console;\n\nexport default class Node {\n  constructor(puzzle, greedy, uniform, goal, parent, heuristics) {\n    this.puzzle = puzzle;\n\n    this.treeLevel = 0;\n    if (!greedy) {\n      if (parent === undefined)\n        // if parent undefined means its first element, so treeLevel should be 0\n        this.treeLevel = 0;\n      // means it's child node, so the treeLevel should equal to (= parent.Level + 1)\n      else this.treeLevel = parent.treeLevel + 1;\n    }\n    this.hash = this.toHash(this.puzzle);\n    this.parent = parent && {\n      parent: parent.parent,\n      puzzle: parent.puzzle,\n      score: parent.score,\n    };\n\n    this.goal = goal;\n    this.isFinal = this.checkIfFinal();\n    this.childs = [];\n    this.score =\n      this.treeLevel + (uniform ? 0 : this.calculateScore(heuristics)); // if uniform is true, heuristic score should be 0 (ignored)\n\n    // generate the params of childs if any, and keep them sleeping (param only without Node object)\n    this.genChilds(uniform, greedy, heuristics);\n  }\n\n  /**\n   *\n   * @param {[][]} twoDarray\n   * @returns from 2d arary to single string with all element of the array joined by dot \".\"\n   */\n  toHash(twoDarray) {\n    return (twoDarray || this.puzzle).map((row) => row.join(\".\")).join(\".\");\n  }\n  /**\n   *\n   * @param {string} heuristic\n   * @returns score value of current puzzle using algo of heuristic given.\n   */\n  calculateScore(heuristics) {\n    let score = 0;\n    let ready_scores = this.heuristics_in_one_loop();\n    const heuristicsFunctions = {\n      manhattan: () => ready_scores.manhattan,\n      linearConflicts: () =>\n      ready_scores.manhattan + 2 * this.heuristic_linear_conflicts(),\n      hamming: () => ready_scores.hamming,\n      euclidean: () => ready_scores.euclidean,\n      diagonal: () => ready_scores.diagonal,\n      gaschnig: () => this.heuristic_gaschnig(),\n    };\n    heuristics.forEach((heuristic) => {\n      score += heuristicsFunctions[heuristic]();\n    });\n\n    return score;\n  }\n  /**\n   * since some heuristics use same loop through the puzzle, and to avoid unnecessary computation\n   * i added gathered those heuristics's score calculation in one loop at the same time\n   * and then you can choose what you want from the object returned\n   * containing each heuristic score\n   * @returns\n   */\n  heuristics_in_one_loop() {\n    let manhattan = 0;\n    let hamming = 0;\n    let euclidean = 0;\n    let diagonal = 0;\n    const size = this.puzzle.length;\n\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        // current tile in the loop\n        const currentTile = this.puzzle[i][j];\n        // find the index of same tile value but in the goal puzzle\n        const tileInGoal = this.findindexOf(this.goal, currentTile);\n        // find the tile that match the current i,j value in goal puzzle\n        const mirrorInGoal = this.goal[i][j];\n        \n        // dont apply the equation on the empty TILE\n        if (currentTile != \"0\")\n          try {\n            // the distance between the X value of current tile and its equivalent in the goal puzzle\n            let d1 = Math.abs(i - tileInGoal.x);\n            // the distance between the Y value of current tile and its equivalent in the goal puzzle\n            let d2 = Math.abs(j - tileInGoal.y);\n\n            // calc hamming score\n            if (currentTile != mirrorInGoal)\n              hamming += currentTile != mirrorInGoal ? 1 : 0;\n\n            // calc manhattan score\n            manhattan += d1 + d2;\n\n            // calc euclidean score\n            euclidean += Math.sqrt(d1 ** 2 + d2 ** 2);\n\n            // calc diagonal\n            diagonal += Math.max(d1, d2);\n           \n          } catch (err) {\n            throw err;\n          }\n      }\n    }\n    const tff = (f) => parseFloat(f.toFixed(4));\n  \n    euclidean = tff(euclidean);\n    manhattan = tff(manhattan);\n  \n    return { manhattan, hamming, euclidean, diagonal };\n  }\n  /**\n   * the function that calculate the linear conflicts score of the puzzle\n   * @returns\n   */\n  heuristic_linear_conflicts() {\n    let conflicts = 0;\n    const size = this.puzzle.length;\n    const values = size * size;\n\n    for (let i = 1; i < values - 1; i++) {\n      for (let j = 2; j < values; j++) {\n        const currI = this.findindexOf(this.puzzle, i);\n        const currJ = this.findindexOf(this.puzzle, j);\n        const targI = this.findindexOf(this.goal, i);\n        const targJ = this.findindexOf(this.goal, j);\n\n        if (currI.x === currJ.x && targI.x === targJ.x)\n          if (\n            (currI.y < currJ.y && targI.y > targJ.y) ||\n            (currI.y > currJ.y && targI.y < targJ.y)\n          )\n            conflicts++;\n\n        if (currI.y === currJ.y && targI.y === targJ.y)\n          if (\n            (currI.x < currJ.x && targI.x > targJ.x) ||\n            (currI.x > currJ.x && targI.x < targJ.x)\n          )\n            conflicts++;\n      }\n    }\n    return conflicts;\n  }\n  /**\n   * the gaschnig heuristic implementation\n   * @returns\n   */\n  heuristic_gaschnig() {\n    // Compute it like this:\n    // i. If the blank is where it should be in goal configuration, move any mismatched tile into the blank.\n    // ii. Now find the tile that should go in the blankâ€™s location, and teleport it there.\n    // iii. Repeat (i. and ii.) until all are in their final positions.\n    let score = 0;\n    const currentMap = JSON.parse(JSON.stringify(this.puzzle));\n    const goal = JSON.parse(JSON.stringify(this.goal));\n    const goalHash = this.toHash(goal);\n\n    while (this.toHash(currentMap) != goalHash) {\n      const cmz = this.findindexOf(currentMap, \"0\");\n      if (goal[cmz.x][cmz.y] == \"0\") {\n        // the zero not in its goal place\n        for (let i = 0; i < this.puzzle.length; i++)\n          for (let j = 0; j < this.puzzle.length; j++)\n            if (currentMap[i][j] != goal[i][j]) {\n              const tmp = currentMap[i][j];\n              currentMap[i][j] = currentMap[cmz.x][cmz.y];\n              currentMap[cmz.x][cmz.y] = tmp;\n              break;\n            }\n      } else {\n        // the zero in goal place\n        const sv = goal[cmz.x][cmz.y];\n        const ci = this.findindexOf(currentMap, sv);\n        const tmp = currentMap[cmz.x][cmz.y];\n        currentMap[cmz.x][cmz.y] = currentMap[ci.x][ci.y];\n        currentMap[ci.x][ci.y] = tmp;\n      }\n      score++;\n    }\n\n    return score;\n  }\n  /**\n   *\n   * @param {boolean} u\n   * @param {boolean} g\n   * @param {string} heuristic\n   * @output generate all the possible childrens from current puzzle by trying to move 0 tile to all direction\n   */\n  genChilds(u, g, heuristic) {\n    const moves = {\n      right: { x: 0, y: 1 },\n      up: { x: -1, y: 0 },\n      left: { x: 0, y: -1 },\n      down: { x: 1, y: 0 },\n    };\n    // find the index of 0 in the current puzzle\n    const zeroIdx = this.findindexOf(this.puzzle, \"0\");\n    // loop through the moves directions\n    for (const dir in moves) {\n      // generate new puzzle with possible move of '0'\n      // if the move is valid new puzzle will be returned\n      // if the move is invalid 'null' will be returned\n      const newPuzzle = this.moveTile(\n        zeroIdx,\n        moves[dir],\n        JSON.parse(JSON.stringify(this.puzzle))\n      );\n\n      if (newPuzzle) {\n        this.childs.push([newPuzzle, g, u, heuristic]);\n      }\n    }\n  }\n  /**\n   *\n   * @param {[][]}} arr2D\n   * @param {string} trgt\n   * @returns {x: number, y: number} coordination of the trgt in arr2D if found\n   * @returns {undefined} if not found\n   */\n  findindexOf(arr2D, trgt) {\n    const size = arr2D.length;\n    for (let i = 0; i < size; i++) {\n      for (let j = 0; j < size; j++) {\n        if (arr2D[i][j] == trgt) return { x: i, y: j };\n      }\n    }\n  }\n\n  /**\n   *\n   * @param {x: number, y: number} tilePos\n   * @param {x: number, y: number} direction\n   * @param {[][]]} array2D\n   * @returns new 2d array with tile at given position moved to direction given in the array2D given\n   */\n  moveTile(tilePos, direction, array2D) {\n    const array2DSize = array2D.length;\n    if (\n      direction.x + tilePos.x >= array2DSize ||\n      direction.x + tilePos.x < 0 ||\n      direction.y + tilePos.y >= array2DSize ||\n      direction.y + tilePos.y < 0\n    )\n      return null;\n    const tmp = array2D[tilePos.x + direction.x][tilePos.y + direction.y];\n    array2D[tilePos.x + direction.x][tilePos.y + direction.y] =\n      array2D[tilePos.x][tilePos.y];\n    array2D[tilePos.x][tilePos.y] = tmp;\n    return array2D;\n  }\n  /**\n   * @output create new instance of Node class with the params of each element in childs\n   */\n  wakeUpChilds() {\n    this.childs = this.childs.map(\n      (l) => new Node(l[0], l[1], l[2], this.goal, this, l[3])\n    );\n  }\n  /**\n   * @returns {boolean} check if the current node is the final target we looking for\n   */\n  checkIfFinal() {\n    return this.hash == this.toHash(this.goal);\n  }\n}\n"],"mappings":"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"}